plugins {
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
    id 'maven-publish'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

group 'net.covers1624'
archivesBaseName = "VersionApi"
version '0.2.0'

version = "$version." + (System.getenv("BUILD_NUMBER") ?: "1")
println "Starting build of ${archivesBaseName}, Version: ${version}"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://maven.covers1624.net/' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.apache.maven:maven-artifact:3.9.6'
    implementation 'org.apache.maven:maven-repository-metadata:3.9.6'
    implementation 'net.covers1624:Quack:0.4.10.95'

    compileOnly 'org.jetbrains:annotations:23.0.0'
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'

    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

test {
    useJUnitPlatform()
}

publishing {
    repositories {
        if (System.getenv('MAVEN_PASS')) {
            maven {
                url "https://nexus.covers1624.net/repository/maven-releases/"
                credentials {
                    username 'covers1624'
                    password System.getenv('MAVEN_PASS')
                }
            }
        }
    }
    publications {
        VersionAPI(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            artifact bootJar

            pom {
                name = archivesBaseName
                description = archivesBaseName
                //The publish plugin doesnt like GString's here apparently..
                url = "https://github.com/covers1624/${archivesBaseName}".toString()
                scm {
                    url = "https://github.com/covers1624/${archivesBaseName}".toString()
                    connection = "scm:git:git://github.com/covers1624/${archivesBaseName}.git".toString()
                    connection = "scm:git:git@github.com:covers1624/${archivesBaseName}.git".toString()
                }

                issueManagement {
                    system = 'github'
                    url = "https://github.com/covers1624/${archivesBaseName}/issues".toString()
                }
                licenses {
                    license {
                        name = "MIT"
                        url = "https://raw.githubusercontent.com/covers1624/${archivesBaseName}/master/LICENSE.txt".toString()
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'covers1624'
                        name = 'covers1624'
                    }
                }
            }
        }
    }
}
